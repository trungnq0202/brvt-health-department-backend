version: "3.3"
services:
  api-gateway-service:
    container_name: api-gateway-service
    build:
      context: ./APIGateway/
      dockerfile: Dockerfile
    image: docker-api-gateway-service
    ports:
      - 8989:8989
    networks:
      - brvt
  discovery-service:
    container_name: discovery-service
    build:
      context: ./DiscoveryService/
      dockerfile: Dockerfile
    image: docker-discovery-service
    ports:
      - 8761:8761
    networks:
      - brvt
  admin-service:
    container_name: admin-service
    build:
      context: ./BRVTAdminService/
      dockerfile: Dockerfile
    image: docker-admin-service
    ports:
      - 8084:8084
    networks:
      - brvt
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    container_name: zookeeper
    networks:
      - brvt
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPIC: "my_topic:1:3"
    networks:
      - brvt
  kafka-service:
    container_name: kafka-service
    build:
      context: ./KafkaService/
      dockerfile: Dockerfile
    image: docker-kafka-service
    ports:
      - 9000:9000
    networks:
      - brvt
  doctor-service:
    container_name: doctor-service
    build:
      context: ./BRVTDoctorService/
      dockerfile: Dockerfile
    image: docker-doctor-service
    ports:
      - 8085:8085
    networks:
      - brvt
  patient-service:
    container_name: patient-service
    build:
      context: ./BRVTPatientService/
      dockerfile: Dockerfile
    image: docker-patient-service
    ports:
      - 8086:8086
    networks:
      - brvt
  redis-service:
    container_name: redis-service
    image: docker-redis-service
    build:
      context: ./BRVTHealthReportService/redis/
      dockerfile: Dockerfile
    hostname: redis
    ports:
      - 6379:6379
    networks:
      - brvt
  health-report-service:
    container_name: health-report-service
    build:
      context: ./BRVTHealthReport/
      dockerfile: Dockerfile
    image: docker-health-report-service
    ports:
      - 8087:8087
    networks:
      - brvt
  blog-service:
    container_name: blog-service
    build:
      context: ./BRVTBlogService/
      dockerfile: Dockerfile
    image: docker-blog-service
    ports:
      - 8088:8088
    networks:
      - brvt
networks:
  brvt:
    name: brvt
    driver: bridge